#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLyDeTai_LINQ
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QuanLyDeTai")]
	public partial class QLDT_LINQDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCapDeTai(CapDeTai instance);
    partial void UpdateCapDeTai(CapDeTai instance);
    partial void DeleteCapDeTai(CapDeTai instance);
    partial void InsertDeTai(DeTai instance);
    partial void UpdateDeTai(DeTai instance);
    partial void DeleteDeTai(DeTai instance);
    #endregion
		
		public QLDT_LINQDataContext() : 
				base(global::QuanLyDeTai_LINQ.Properties.Settings.Default.QuanLyDeTaiConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLDT_LINQDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLDT_LINQDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLDT_LINQDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLDT_LINQDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CapDeTai> CapDeTais
		{
			get
			{
				return this.GetTable<CapDeTai>();
			}
		}
		
		public System.Data.Linq.Table<DeTai> DeTais
		{
			get
			{
				return this.GetTable<DeTai>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CapDeTai")]
	public partial class CapDeTai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaCapDeTai;
		
		private string _TenCapDeTai;
		
		private EntitySet<DeTai> _DeTais;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCapDeTaiChanging(string value);
    partial void OnMaCapDeTaiChanged();
    partial void OnTenCapDeTaiChanging(string value);
    partial void OnTenCapDeTaiChanged();
    #endregion
		
		public CapDeTai()
		{
			this._DeTais = new EntitySet<DeTai>(new Action<DeTai>(this.attach_DeTais), new Action<DeTai>(this.detach_DeTais));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCapDeTai", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaCapDeTai
		{
			get
			{
				return this._MaCapDeTai;
			}
			set
			{
				if ((this._MaCapDeTai != value))
				{
					this.OnMaCapDeTaiChanging(value);
					this.SendPropertyChanging();
					this._MaCapDeTai = value;
					this.SendPropertyChanged("MaCapDeTai");
					this.OnMaCapDeTaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenCapDeTai", DbType="NVarChar(255)")]
		public string TenCapDeTai
		{
			get
			{
				return this._TenCapDeTai;
			}
			set
			{
				if ((this._TenCapDeTai != value))
				{
					this.OnTenCapDeTaiChanging(value);
					this.SendPropertyChanging();
					this._TenCapDeTai = value;
					this.SendPropertyChanged("TenCapDeTai");
					this.OnTenCapDeTaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CapDeTai_DeTai", Storage="_DeTais", ThisKey="MaCapDeTai", OtherKey="MaCapDeTai")]
		public EntitySet<DeTai> DeTais
		{
			get
			{
				return this._DeTais;
			}
			set
			{
				this._DeTais.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DeTais(DeTai entity)
		{
			this.SendPropertyChanging();
			entity.CapDeTai = this;
		}
		
		private void detach_DeTais(DeTai entity)
		{
			this.SendPropertyChanging();
			entity.CapDeTai = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeTai")]
	public partial class DeTai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDeTai;
		
		private string _TenDeTai;
		
		private System.Nullable<bool> _TinhTrang;
		
		private string _MaCapDeTai;
		
		private System.Nullable<System.DateTime> _NgayNhanDeTai;
		
		private string _ChuNhiem;
		
		private EntityRef<CapDeTai> _CapDeTai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDeTaiChanging(string value);
    partial void OnMaDeTaiChanged();
    partial void OnTenDeTaiChanging(string value);
    partial void OnTenDeTaiChanged();
    partial void OnTinhTrangChanging(System.Nullable<bool> value);
    partial void OnTinhTrangChanged();
    partial void OnMaCapDeTaiChanging(string value);
    partial void OnMaCapDeTaiChanged();
    partial void OnNgayNhanDeTaiChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayNhanDeTaiChanged();
    partial void OnChuNhiemChanging(string value);
    partial void OnChuNhiemChanged();
    #endregion
		
		public DeTai()
		{
			this._CapDeTai = default(EntityRef<CapDeTai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDeTai", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDeTai
		{
			get
			{
				return this._MaDeTai;
			}
			set
			{
				if ((this._MaDeTai != value))
				{
					this.OnMaDeTaiChanging(value);
					this.SendPropertyChanging();
					this._MaDeTai = value;
					this.SendPropertyChanged("MaDeTai");
					this.OnMaDeTaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDeTai", DbType="NVarChar(255)")]
		public string TenDeTai
		{
			get
			{
				return this._TenDeTai;
			}
			set
			{
				if ((this._TenDeTai != value))
				{
					this.OnTenDeTaiChanging(value);
					this.SendPropertyChanging();
					this._TenDeTai = value;
					this.SendPropertyChanged("TenDeTai");
					this.OnTenDeTaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Bit")]
		public System.Nullable<bool> TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCapDeTai", DbType="NChar(10)")]
		public string MaCapDeTai
		{
			get
			{
				return this._MaCapDeTai;
			}
			set
			{
				if ((this._MaCapDeTai != value))
				{
					if (this._CapDeTai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCapDeTaiChanging(value);
					this.SendPropertyChanging();
					this._MaCapDeTai = value;
					this.SendPropertyChanged("MaCapDeTai");
					this.OnMaCapDeTaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayNhanDeTai", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayNhanDeTai
		{
			get
			{
				return this._NgayNhanDeTai;
			}
			set
			{
				if ((this._NgayNhanDeTai != value))
				{
					this.OnNgayNhanDeTaiChanging(value);
					this.SendPropertyChanging();
					this._NgayNhanDeTai = value;
					this.SendPropertyChanged("NgayNhanDeTai");
					this.OnNgayNhanDeTaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChuNhiem", DbType="NVarChar(255)")]
		public string ChuNhiem
		{
			get
			{
				return this._ChuNhiem;
			}
			set
			{
				if ((this._ChuNhiem != value))
				{
					this.OnChuNhiemChanging(value);
					this.SendPropertyChanging();
					this._ChuNhiem = value;
					this.SendPropertyChanged("ChuNhiem");
					this.OnChuNhiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CapDeTai_DeTai", Storage="_CapDeTai", ThisKey="MaCapDeTai", OtherKey="MaCapDeTai", IsForeignKey=true)]
		public CapDeTai CapDeTai
		{
			get
			{
				return this._CapDeTai.Entity;
			}
			set
			{
				CapDeTai previousValue = this._CapDeTai.Entity;
				if (((previousValue != value) 
							|| (this._CapDeTai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CapDeTai.Entity = null;
						previousValue.DeTais.Remove(this);
					}
					this._CapDeTai.Entity = value;
					if ((value != null))
					{
						value.DeTais.Add(this);
						this._MaCapDeTai = value.MaCapDeTai;
					}
					else
					{
						this._MaCapDeTai = default(string);
					}
					this.SendPropertyChanged("CapDeTai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
